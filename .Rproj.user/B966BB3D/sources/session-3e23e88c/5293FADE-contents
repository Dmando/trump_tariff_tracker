library(fredr)
library(readr)
library(imf.data)
library(ustfd)
library(lubridate)
library(tidyverse)
library(zoo)
library(rdbnomics)


setwd("~/../Documents/Evaluating_Trump_Tariffs/trump_tariff_tracker/")

# Goal One Data

# Manufacturing Employment Data

MANEMP <- fredr(series_id = "MANEMP",
                observation_start = as.Date("2010-01-01"),
                frequency = "q",
                aggregation_method = "sum") 
MANEMP$date <- ymd(MANEMP$date)
MANEMP$date <- c(MANEMP$date[-1], NA)
MANEMP[nrow(MANEMP), "date"] <- tail(na.omit(MANEMP$date), 1) + months(3)



MANEMP <- MANEMP %>% 
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>% 
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>% 
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(MANEMP, "./Data/MANEMP.csv")

# New Manufacturing Orders Data

AMTMNO <- fredr(series_id = "AMTMNO",
                observation_start = as.Date("2010-01-01"),
                frequency = "q",
                aggregation_method = "sum") 
AMTMNO$date <- ymd(AMTMNO$date)
AMTMNO$date <- c(AMTMNO$date[-1], NA)
AMTMNO[nrow(AMTMNO), "date"] <- tail(na.omit(AMTMNO$date), 1) + months(3)

AMTMNO <- AMTMNO %>% 
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>% 
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>% 
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>% 
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(AMTMNO, "Data/AMTMNO.csv")

# Value of Shipments Data

AMTMVS <- fredr(series_id = "AMTMVS",
                observation_start = as.Date("2010-01-01"),
                frequency = "q",
                aggregation_method = "sum") 
AMTMVS$date <- ymd(AMTMVS$date)
AMTMVS$date <- c(AMTMVS$date[-1], NA)
AMTMVS[nrow(AMTMVS), "date"] <- tail(na.omit(AMTMVS$date), 1) + months(3)


AMTMVS <- AMTMVS %>% 
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>% 
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>% 
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>% 
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(AMTMVS, "Data/AMTMVS.csv")

# Industrial Production Data

IPMAN <- fredr(series_id = "IPMAN",
               observation_start = as.Date("2010-01-01"),
               frequency = "q") 
IPMAN$date <- ymd(IPMAN$date)
IPMAN$date <- c(IPMAN$date[-1], NA)
IPMAN[nrow(IPMAN), "date"] <- tail(na.omit(IPMAN$date), 1) + months(3)

IPMAN <- IPMAN %>% 
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>% 
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>% 
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>% 
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(IPMAN, "Data/IPMAN.csv")

# Industrial Capacity Data

CAPGMFS <- fredr(series_id = "CAPGMFS",
                 observation_start = as.Date("2010-01-01"),
                 frequency = "q") 
CAPGMFS$date <- ymd(CAPGMFS$date)
CAPGMFS$date <- c(CAPGMFS$date[-1], NA)
CAPGMFS[nrow(CAPGMFS), "date"] <- tail(na.omit(CAPGMFS$date), 1) + months(3)

CAPGMFS <- CAPGMFS %>% 
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>% 
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>% 
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>% 
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(CAPGMFS, "Data/CAPGMFS.csv")

# Manufacturing Factory Investment

C307RX1Q020SBEA <- fredr(series_id = "C307RX1Q020SBEA",
                         observation_start = as.Date("2010-01-01")) 
C307RX1Q020SBEA$date <- ymd(C307RX1Q020SBEA$date)
C307RX1Q020SBEA$date <- c(C307RX1Q020SBEA$date[-1], NA)
C307RX1Q020SBEA[nrow(C307RX1Q020SBEA), "date"] <- tail(na.omit(C307RX1Q020SBEA$date), 1) + months(3)

C307RX1Q020SBEA <- C307RX1Q020SBEA %>% 
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>% 
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>% 
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>% 
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(C307RX1Q020SBEA, "Data/C307RX1Q020SBEA.csv")

# ISM PMI

ism_pmi <- rdb(ids = "ISM/pmi/pm")
ism_pmi$period <- ymd(ism_pmi$period)
ism_pmi$period <- c(ism_pmi$period[-1], NA)
ism_pmi[nrow(ism_pmi), "period"] <- tail(na.omit(ism_pmi$period), 1) + months(3)

ism_pmi <- ism_pmi %>% 
  unite(series_id, c(provider_code, series_name, series_code), sep = "") %>% 
  select(-Frequency, -dataset_code, -frequency, -original_value, -original_period, -dataset_name, -indexed_at, -`@frequency`) %>% 
  rename(date = period) %>% 
  mutate(date = floor_date(date, unit = "quarter")) %>%
  group_by(date) %>%
  summarise(value = mean(value), .groups = "drop") %>% 
  mutate(date = date + months(3)) %>%
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>% 
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(ism_pmi, "Data/ism_pmi.csv")

# Combining all Goal One Datasets
# Updated to quarterly

manufacturing_datasets <- list(ism_pmi, MANEMP, AMTMNO, AMTMVS, IPMAN, CAPGMFS, C307RX1Q020SBEA)
weights <- c(1/2, 1/12, 1/12, 1/12, 1/12, 1/12, 1/12)
weighted_datasets <- mapply(function(df, w, i) {
  df %>%
    mutate(weighted_z = zscore_2yravg * w) %>%
    select(date, weighted_z) %>%
    rename(!!paste0("weighted_z_", i) := weighted_z)
}, manufacturing_datasets, weights, seq_along(manufacturing_datasets), SIMPLIFY = FALSE)

goal_one_tracker <- Reduce(function(x, y) full_join(x, y, by = "date"), weighted_datasets)

goal_one_tracker <- goal_one_tracker %>%
  mutate(total_weighted_z = rowSums(select(., starts_with("weighted_z_")), na.rm = TRUE)) %>% 
  drop_na() %>% 
  arrange(date) 
write_csv(goal_one_tracker, "Data/goal_one_data.csv")

# Goal Two Data
# Updated to quarterly Nominal Broad US Dollar Index

# Nominal Broad US Dollar Index

DTWEXBGS <- fredr(series_id = "DTWEXBGS",
                  observation_start = as.Date("2010-01-01"),
                  frequency = "q") 
DTWEXBGS$date <- ymd(DTWEXBGS$date)
DTWEXBGS$date <- c(DTWEXBGS$date[-1], NA)
DTWEXBGS[nrow(DTWEXBGS), "date"] <- tail(na.omit(DTWEXBGS$date), 1) + months(3)


DTWEXBGS <- DTWEXBGS %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)*-1) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)*-1) %>% 
  drop_na() %>% 
  arrange(date) 
write_csv(DTWEXBGS, "./Data/DTWEXBGS.csv")

# US Allies Defense Spending

gdp <- read_csv("./Data/gdp.csv")
milex <- read_csv("./Data/sipri_gdp.csv")
gdp <- gdp %>% 
  pivot_longer(cols = starts_with("20"),
               names_to = "Year",
               values_to = "GDP")
milex <- milex %>% 
  pivot_longer(cols = starts_with("20"),
               names_to = "Year",
               values_to = "Milex")

military_spending <- gdp %>% 
  left_join(milex) %>% 
  mutate(GDP = GDP*1000000000) %>% 
  mutate(Milex = Milex*1000000)

military_spending <- military_spending %>% 
  group_by(Year) %>% 
  summarise(GDP = mean(GDP),
            Milex = mean(Milex)) %>%
  mutate(Share = Milex/GDP)
military_spending$Year <- as.numeric(military_spending$Year) 
write_csv(military_spending, "./Data/military_spending.csv")

# Goal Three Data

adherence <- read_csv("Data/TTT_Countries.csv")


adherence$Date <- mdy(adherence$Date)
all_quarters <- seq(floor_date(min(adherence$Date), "quarter"),
                    floor_date(max(adherence$Date), "quarter"),
                    by = "quarter")

adherence <- adherence %>% 
  mutate(date = floor_date(Date, "quarter")) %>%
  group_by(Country) %>%
  complete(date = all_quarters) %>%  
  arrange(Country, date) %>%
  fill(Adherence, `GDP Percentage`, .direction = "down") %>%
  group_by(date, Adherence) %>% 
  summarise(`GDP Percentage` = sum(`GDP Percentage`), .groups = "drop") %>%  
  arrange(date) %>% 
  pivot_wider(names_from = Adherence, values_from = `GDP Percentage`) %>% 
  mutate(Stable = No + Partial)
write_csv(adherence, "./Data/goal_three_data.csv")

# Goal Four Data
# Updated to Quarterly

# St. Louis Fed Financial Stress Index Data

STLFSI4 <- fredr(series_id = "STLFSI4",
                  observation_start = as.Date("2010-01-01"),
                  frequency = "q") 
STLFSI4$date <- ymd(STLFSI4$date)
STLFSI4$date <- c(STLFSI4$date[-1], NA)
STLFSI4[nrow(STLFSI4), "date"] <- tail(na.omit(STLFSI4$date), 1) + months(3)

STLFSI4 <- STLFSI4 %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)*-1) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)*-1) 
write_csv(STLFSI4, "./Data/STLFSI4.csv")

# Unemployment (U5) Data

U5RATE <- fredr(series_id = "U5RATE",
                 observation_start = as.Date("2010-01-01"),
                 frequency = "q") 
U5RATE$date <- ymd(U5RATE$date)
U5RATE$date <- c(U5RATE$date[-1], NA)
U5RATE[nrow(U5RATE), "date"] <- tail(na.omit(U5RATE$date), 1) + months(3)

U5RATE <- U5RATE %>%  
  select(-realtime_start, -realtime_end) %>%  
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)*-1) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)*-1) 
write_csv(U5RATE, "./Data/U5RATE.csv")

# Real PCE per Capita

A794RX0Q048SBEA <- fredr(series_id = "A794RX0Q048SBEA",
                         observation_start = as.Date("2010-01-01"))
A794RX0Q048SBEA$date <- ymd(A794RX0Q048SBEA$date)
A794RX0Q048SBEA$date <- c(A794RX0Q048SBEA$date[-1], NA)
A794RX0Q048SBEA[nrow(A794RX0Q048SBEA), "date"] <- tail(na.omit(A794RX0Q048SBEA$date), 1) + months(3)

A794RX0Q048SBEA <- A794RX0Q048SBEA %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)) 
write_csv(A794RX0Q048SBEA, "./Data/A794RX0Q048SBEA.csv")


# Median Usual Weekly Earnings

LES1252881600Q <- fredr(series_id = "LES1252881600Q",
                        observation_start = as.Date("2010-01-01"))
LES1252881600Q$date <- ymd(LES1252881600Q$date)
LES1252881600Q$date <- c(LES1252881600Q$date[-1], NA)
LES1252881600Q[nrow(LES1252881600Q), "date"] <- tail(na.omit(LES1252881600Q$date), 1) + months(3)

LES1252881600Q <- LES1252881600Q %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)) 
write_csv(LES1252881600Q, "./Data/LES1252881600Q.csv")

# Consumer Sentiment

UMCSENT <- fredr(series_id = "UMCSENT",
                 observation_start = as.Date("2010-01-01"),
                 frequency = "q")
UMCSENT$date <- ymd(UMCSENT$date)
UMCSENT$date <- c(UMCSENT$date[-1], NA)
UMCSENT[nrow(UMCSENT), "date"] <- tail(na.omit(UMCSENT$date), 1) + months(3)

UMCSENT <- UMCSENT %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)) 
write_csv(UMCSENT, "./Data/UMCSENT.csv")

# Median CPI

MEDCPIM158SFRBCLE <- fredr(series_id = "MEDCPIM158SFRBCLE",
                 observation_start = as.Date("2010-01-01"),
                 frequency = "q")
MEDCPIM158SFRBCLE$date <- ymd(MEDCPIM158SFRBCLE$date)
MEDCPIM158SFRBCLE$date <- c(MEDCPIM158SFRBCLE$date[-1], NA)
MEDCPIM158SFRBCLE[nrow(MEDCPIM158SFRBCLE), "date"] <- tail(na.omit(MEDCPIM158SFRBCLE$date), 1) + months(3)

MEDCPIM158SFRBCLE <- MEDCPIM158SFRBCLE %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)*-1) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)*-1) 
write_csv(MEDCPIM158SFRBCLE, "./Data/MEDCPIM158SFRBCLE.csv")

# Combining all Goal Four Data

economic_datasets <- list(STLFSI4, U5RATE, A794RX0Q048SBEA, LES1252881600Q, UMCSENT, MEDCPIM158SFRBCLE)
weights_2 <- c(1/2, 1/10, 1/10, 1/10, 1/10, 1/10)
weighted_datasets_2 <- mapply(function(df, w, i) {
  df %>%
    mutate(weighted_z = zscore_2yravg * w) %>%
    select(date, weighted_z) %>%
    rename(!!paste0("weighted_z_", i) := weighted_z)
}, economic_datasets, weights_2, seq_along(economic_datasets), SIMPLIFY = FALSE)

goal_four_tracker <- Reduce(function(x, y) full_join(x, y, by = "date"), weighted_datasets_2)

goal_four_tracker <- goal_four_tracker %>%
  mutate(total_weighted_z = rowSums(select(., starts_with("weighted_z_")), na.rm = TRUE)) %>% 
  drop_na() %>% 
  arrange(date)
write_csv(goal_four_tracker, "Data/goal_four_data.csv")

# Goal Five Data
# Updated to quarterly

# IMF COFER (Currency Reserves) Data

COFER <- load_datasets("COFER")
COFER <- COFER$get_series(freq = "Q", ref_area = "W00")
COFER$TIME_PERIOD <- as.Date(as.yearqtr(COFER$TIME_PERIOD, format = "%Y-Q%q"))
COFER$TIME_PERIOD <- c(COFER$TIME_PERIOD[-1], NA)
COFER[nrow(COFER), "TIME_PERIOD"] <- tail(na.omit(COFER$TIME_PERIOD), 1) + months(3)

COFER <- COFER %>% 
  rename(date = TIME_PERIOD) %>% 
  filter(date > "2010-01-19") %>% 
  select(date, ends_with("USDRT_PT")) %>% 
  rename(value = Q.W00.RAXGFXARUSDRT_PT) %>% 
  mutate(value = as.numeric(value)) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)) 
write_csv(COFER, "Data/COFER.csv")

# Loans denominated in USD

usd_loans_url <- c("https://stats.bis.org/api/v2/data/dataflow/BIS/WS_LBS_D_PUB/1.0/Q.S.L.G.USD.A.5J.A.5A.A.5J.N?format=csv")

usd_loans_data <- list()

for (i in 1:length(usd_loans_url)) {
  usd_loans_data[[i]] <- read.csv(usd_loans_url[i])
}

usd_loans <- rbind(usd_loans_data)

usd_loans <- usd_loans["usd_loans_data", 1][["usd_loans_data"]]

total_loans_url <- c("https://stats.bis.org/api/v2/data/dataflow/BIS/WS_LBS_D_PUB/1.0/Q.S.L.G.TO1.A.5J.A.5A.A.5J.N?format=csv")

total_loans_data <- list()

for (i in 1:length(total_loans_url)) {
  total_loans_data[[i]] <- read.csv(total_loans_url[i])
}

total_loans <- rbind(total_loans_data)
total_loans <- total_loans["total_loans_data", 1][["total_loans_data"]]

usd_loans <- usd_loans %>% 
  select(TIME_PERIOD, OBS_VALUE) %>% 
  rename(USD = OBS_VALUE)

total_loans <- total_loans %>% 
  select(TIME_PERIOD, OBS_VALUE) %>% 
  rename(Total = OBS_VALUE)

loans_currency <- usd_loans %>% 
  left_join(total_loans) 

loans_currency$TIME_PERIOD <- as.Date(as.yearqtr(loans_currency$TIME_PERIOD, format = "%Y-Q%q"))
loans_currency$TIME_PERIOD <- c(loans_currency$TIME_PERIOD[-1], NA)
loans_currency[nrow(loans_currency), "TIME_PERIOD"] <- tail(na.omit(loans_currency$TIME_PERIOD), 1) + months(3)

loans_currency <- loans_currency %>% 
  rename(date = TIME_PERIOD) %>% 
  filter(date > "2010-01-19") %>% 
  mutate(value = USD/Total) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(loans_currency, "Data/loans_currency.csv")

# Debt denominated in USD

usd_debt_url <- c("https://stats.bis.org/api/v2/data/dataflow/BIS/WS_DEBT_SEC2_PUB/1.0/Q.3P.3P.1.1.C.A.A.USD.A.A.A.A.A.I?format=csv")

usd_debt_data <- list()

for (i in 1:length(usd_debt_url)) {
  usd_debt_data[[i]] <- read.csv(usd_debt_url[i])
}

usd_debt <- rbind(usd_debt_data)

usd_debt <- usd_debt["usd_debt_data", 1][["usd_debt_data"]]

total_debt_url <- c("https://stats.bis.org/api/v2/data/dataflow/BIS/WS_DEBT_SEC2_PUB/1.0/Q.3P.3P.1.1.C.A.A.TO1.A.A.A.A.A.I?format=csv")

total_debt_data <- list()

for (i in 1:length(total_debt_url)) {
  total_debt_data[[i]] <- read.csv(total_debt_url[i])
}

total_debt <- rbind(total_debt_data)
total_debt <- total_debt["total_debt_data", 1][["total_debt_data"]]

usd_debt <- usd_debt %>% 
  select(TIME_PERIOD, OBS_VALUE) %>% 
  rename(USD = OBS_VALUE)

total_debt <- total_debt %>% 
  select(TIME_PERIOD, OBS_VALUE) %>% 
  rename(Total = OBS_VALUE)

debt_currency <- usd_debt %>% 
  left_join(total_debt) 

debt_currency$TIME_PERIOD <- as.Date(as.yearqtr(debt_currency$TIME_PERIOD, format = "%Y-Q%q"))
debt_currency$TIME_PERIOD <- c(debt_currency$TIME_PERIOD[-1], NA)
debt_currency[nrow(debt_currency), "TIME_PERIOD"] <- tail(na.omit(debt_currency$TIME_PERIOD), 1) + months(3)

debt_currency <- debt_currency %>% 
  rename(date = TIME_PERIOD) %>% 
  filter(date > "2010-01-19") %>% 
  mutate(value = USD/Total) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg))
write_csv(debt_currency, "Data/debt_currency.csv")

# International Payments in USD

IntlPayments_qtr <- read_csv("Data/IntlPayments_qtr.csv")

# Combining Currency Datasets

currency_datasets <- list(COFER, loans_currency, debt_currency, IntlPayments_qtr)
weights_3 <- c(1/4, 1/4, 1/4, 1/4)
weighted_datasets_3 <- mapply(function(df, w, i) {
  df %>%
    mutate(weighted_z = zscore_2yravg * w) %>%
    select(date, weighted_z) %>%
    rename(!!paste0("weighted_z_", i) := weighted_z)
}, currency_datasets, weights_3, seq_along(currency_datasets), SIMPLIFY = FALSE)

goal_five_tracker <- Reduce(function(x, y) full_join(x, y, by = "date"), weighted_datasets_3)

goal_five_tracker <- goal_five_tracker %>%
  mutate(total_weighted_z = rowSums(select(., starts_with("weighted_z_")), na.rm = TRUE)) %>% 
  drop_na() %>% 
  arrange(date)
write_csv(goal_five_tracker, "Data/goal_five_data.csv")

# Goal Six Data
# Updated main metric to quarterly

# Balance of Trade (Utilized Metric)

BOPGSTB <- fredr(series_id = "BOPGSTB",
                 observation_start = as.Date("2010-01-01"),
                 frequency = "q",
                 aggregation_method = "sum")
BOPGSTB$date <- ymd(BOPGSTB$date)
BOPGSTB$date <- c(BOPGSTB$date[-1], NA)
BOPGSTB[nrow(BOPGSTB), "date"] <- tail(na.omit(BOPGSTB$date), 1) + months(3)

goal_six_tracker <- BOPGSTB %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)) %>% 
  drop_na() %>% 
  arrange(date)
write_csv(goal_six_tracker, "Data/goal_six_data.csv")

# Balance of Payments

USABCAGDPBP6 <- fredr(series_id = "USABCAGDPBP6",
                      observation_start = as.Date("2010-01-01"))
USABCAGDPBP6$date <- ymd(USABCAGDPBP6$date)

USABCAGDPBP6 <- USABCAGDPBP6 %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 10, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 10, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  filter(date < "2025-01-01") 
write_csv(USABCAGDPBP6, "Data/USABCAGDPBP6.csv")

# Current Account

IEABC <- fredr(series_id = "IEABC",
               observation_start = as.Date("2010-01-01"))
IEABC$date <- ymd(IEABC$date)
IEABC$date <- c(IEABC$date[-1], NA)
IEABC[nrow(IEABC), "date"] <- tail(na.omit(IEABC$date), 1) + months(3)

IEABC <- IEABC %>%  
  select(-realtime_start, -realtime_end) %>% 
  mutate(value_10yravg = rollmean(value, k = 40, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 40, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)) 
write_csv(IEABC, "Data/IEABC.csv")

# Goal Seven Data
# Updated to quarterly

GDPC1 <- fredr(series_id = "GDPC1",
               observation_start = as.Date("2010-01-01"))
GDPC1$date <- ymd(GDPC1$date)
GDPC1$date <- c(GDPC1$date[-1], NA)
GDPC1[nrow(GDPC1), "date"] <- tail(na.omit(GDPC1$date), 1) + months(3)

A091RC1Q027SBEA <- fredr(series_id = "A091RC1Q027SBEA",
                         observation_start = as.Date("2010-01-01"))
A091RC1Q027SBEA$date <- ymd(A091RC1Q027SBEA$date)
A091RC1Q027SBEA$date <- c(A091RC1Q027SBEA$date[-1], NA)
A091RC1Q027SBEA[nrow(A091RC1Q027SBEA), "date"] <- tail(na.omit(A091RC1Q027SBEA$date), 1) + months(3)

goal_seven_data <- A091RC1Q027SBEA %>% 
  rename(payment_value = value) %>% 
  full_join(GDPC1, by = join_by(date)) %>% 
  select(-realtime_start.y, -realtime_start.x, -realtime_end.x, -realtime_end.y, -series_id.x, -series_id.y) %>% 
  rename(gdp_value = value) %>% 
  mutate(value = payment_value/gdp_value) %>% 
  mutate(value_10yravg = rollmean(value, k = 30, fill = NA, align = "right")) %>%  
  mutate(sd_10yravg = rollapply(value, width = 30, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(value_2yravg = rollmean(value, k = 3, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 3, FUN = sd, fill = NA, align = "right")) %>%  
  mutate(zscore_10yravg = ((value - value_10yravg)/sd_10yravg)*-1) %>%  
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)*-1) %>% 
  drop_na() %>% 
  arrange(date) 
write_csv(goal_seven_data, "Data/goal_seven_data.csv")

# Goal Eight Data
# Updated to quarterly

goal_eight <- ustfd_simple(
  'v1/accounting/mts/mts_table_3',
  fields = c(
    "record_date", "classification_id", "classification_desc","current_month_rcpt_outly_amt"
  ),
  filter = list(
    record_date = c('>=' = '2010-01-01')
  ),
  page_size = 10000
)
goal_eight <- select(goal_eight$data, -classification_id)
goal_eight <- goal_eight %>% 
  filter(classification_desc %in% c("Customs Duties", "Total Receipts")) %>% 
  pivot_wider(names_from = classification_desc, values_from = current_month_rcpt_outly_amt) %>% 
  mutate(value = (`Customs Duties`/`Total Receipts`)*100) %>%
  rename(date = record_date) %>% 
  mutate(date = floor_date(date, unit = "quarter")) %>%
  group_by(date) %>%
  summarise(value = mean(value), .groups = "drop") %>% 
  mutate(date = date + months(3)) %>%
  mutate(value_2yravg = rollmean(value, k = 8, fill = NA, align = "right")) %>%  
  mutate(sd_2yravg = rollapply(value, width = 8, FUN = sd, fill = NA, align = "right")) %>% 
  mutate(zscore_2yravg = ((value - value_2yravg)/sd_2yravg)) %>% 
  drop_na() %>% 
  arrange(date) 
write_csv(goal_eight, "Data/goal_eight_data.csv")
















